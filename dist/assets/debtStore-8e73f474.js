import{aA as m,aB as M,ar as G,aj as L,aC as l,ac as r}from"./index-b45d696c.js";import{a as D,o as R}from"./operationRepository-f71a1956.js";import{v as P}from"./volunteerRepository-bd0b1d31.js";class A{constructor(t){this.paidAt=t}}class q{constructor(t,a){this.volunteerId=t,this.name=a}}var I=Object.defineProperty,S=Object.getOwnPropertyDescriptor,_=(e,t,a,n)=>{for(var o=n>1?void 0:n?S(t,a):t,i=e.length-1,d;i>=0;i--)(d=e[i])&&(o=(n?d(t,a,o):d(o))||o);return n&&o&&I(t,a,o),o},j=(e,t)=>(a,n)=>t(a,n,e);let u=class{constructor(e){this.apiService=e}async getDebts(e,t,a,n){return(await this.apiService.invoke("debt?volunteerId="+e+"&name="+t+"&currentPage="+a+"&pageSize="+n)).data}async getById(e){return(await this.apiService.invoke("debt/"+e)).data}async update(e){await this.apiService.put("debt/"+e.id,e)}async pay(e,t){await this.apiService.patch("debt/"+e,t)}};u=_([m(),j(0,M("ApiService"))],u);const U=G("debts",()=>{const e=L({debt:null,initialDebt:null,debts:[],users:[],filters:new q("",""),isEditing:!1,isLoading:!1,action:"D",showModel:!1,showModelGenerateDebts:!1,startDateGenerateDebts:null,endDateGenerateDebts:null,generateDebtsRequest:new D(new Date,new Date)}),t=l.resolve(u),a=l.resolve(R),n=l.resolve(P),o=r(()=>e.filters),i=r(()=>e.debts),d=r(()=>e.debt),p=r(()=>e.users),g=r(()=>e.showModel),y=r(()=>e.showModelGenerateDebts),f=r(()=>e.startDateGenerateDebts),v=r(()=>e.endDateGenerateDebts),w=r(()=>e.generateDebtsRequest),h=r(()=>e.isLoading);return{getData:async()=>{e.isLoading=!0;const s=await t.getDebts("","",1,15);e.debts=s.result;const c=await n.get("","",1,2e3);console.log(c),c.result.forEach(b=>{e.users.push({value:b.id,title:b.name})}),e.isLoading=!1},filter:async()=>{e.isLoading=!0;const s=await t.getDebts(e.filters.volunteerId,e.filters.name,1,15);e.debts=s.result,e.isLoading=!1},getList:i,getDebt:d,users:p,filters:o,showModel:g,openModalPayment:async s=>{e.showModel=!0,e.debt=s},closeModalPayment:async()=>{e.showModel=!1;var s=e.debt;s.paidAt=null,e.debt=s},confirmPayment:async()=>{e.isLoading=!0;var s=new A(e.debt.paidAt);await t.pay(e.debt.id,s),e.isLoading=!0,e.showModel=!1},getById:async s=>{e.isLoading=!0;const c=await t.getById(s);e.debt=c,e.isLoading=!1},save:async()=>{e.isLoading=!0;var s=e.debt;await t.update({id:s.id,name:s.name,description:s.description,amount:s.amount,dueDate:s.dueDate,volunteerId:s.volunteerId,paidAt:s.paidAt}),e.isLoading=!1,e.isEditing=!1},showModelGenerateDebts:y,startDateGenerateDebts:f,endDateGenerateDebts:v,openModalGenerateDebts:async()=>{e.showModelGenerateDebts=!0},closeModalGenerateDebts:async()=>{e.showModelGenerateDebts=!1,e.startDateGenerateDebts=null,e.endDateGenerateDebts=null},generateDebts:async()=>{console.log(e.generateDebtsRequest.startsAt),console.log(e.generateDebtsRequest.endsAt),e.isLoading=!0,a.createDebts(new D(e.generateDebtsRequest.startsAt,e.generateDebtsRequest.endsAt)),e.isLoading=!1},generateDebtsRequest:w,isLoading:h}});export{U as u};
